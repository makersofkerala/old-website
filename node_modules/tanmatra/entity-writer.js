// Sample shape
{entity: "counters", storage: "file", shape: [{entity: "counter", store: "file", shape: "number"}]};

const parseShape = (d) => {

    let {entity, storage, shape} = d;

    parseShape(shape);
    
}

// Expanded Data
{key: 0, entity: "counters", store: "file", shape: [{key: 0, entity: "counter", store: "file", shape: "number"}]};

// store.w
{entity: "counters", store: "file", shape: [{ref: key}, {ref: key}], }

// Persisted Data
{key: 0, entity: "counters", store: "file", shape: [{ref: key, store: s}]};


// Another shape
{entity: "entry", store: "localStorage", shape: {name: {entity: "name", shape: "string", storage: "localStorage"},
						 number: {entity: "number", shape: "string", storage: "localStorage"}}}

makeStore(entity)

{i, o, w, entity, shape, store}
// Writer here will recursively write the data stores
w: () => 


// Circle
w: () => localStorage.setItem("tanmatradb:circle", {r, loc, fill})

// Circles
w: () => localStorage.setItem("tanmatradb:circles", [{entity: "circles/circle0"},  {entity: "circles/circle1"}, {entity: "circles/circle2"}])
// Should also cause circle0 to write which will be
w: () => localStorage.setItem("tanmatradb:circle0", {r, loc, fill})
w: () => localStorage.setItem("tanmatradb:circle1", {r, loc, fill})
w: () => localStorage.setItem("tanmatradb:circle2", {r, loc, fill})

// Circles File
{entity: "file", shape: {entity: "circles", shape: [{entity: "circle", shape: {r: "number", cx: "number", cy: "number", fill: "string"}}]}}
w: () => localStorage.setItem("tanmatradb:file", {entity: "circles"}])

// Circles Project
{entity: "project", shape: [{entity: "file", shape: {entity: "circles", shape: [{entity: "circle", shape: {r: "number", cx: "number", cy: "number", fill: "string"}}]}}]}
w: () => localStorage.setItem("tanmatradb:project", [{entity: "project/file0"}, {entity: "project/file1"}, {"project/file2"}])

w: () => localStorage.setItem("tanmatradb:project/file0", [{entity: "file0/circles"}])

w: () => localStorage.setItem("tanmatradb:project/file0/circles", [{entity: "project/file0/circles/circle0"}, {entity: "project/file0/circles/circle0"}])

